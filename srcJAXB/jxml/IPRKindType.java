//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.03.11 at 12:27:12 AM CET 
//


package jxml;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for KindMarkType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="KindMarkType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}token">
 *     &lt;enumeration value="Individual"/>
 *     &lt;enumeration value="Collective"/>
 *     &lt;enumeration value="Certificate"/>
 *     &lt;enumeration value="Guarantee"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "IPRKindType")
@XmlEnum
public enum IPRKindType {

    @XmlEnumValue("Trade mark")
    TRADEMARK("Trade mark"),
    @XmlEnumValue("Logotype")
    LOGOTYPE("Logotype"),
    @XmlEnumValue("Commercial name")
    COMMERCIALNAME("Commercial name"),
    @XmlEnumValue("Title of establishment")
    TITLEOFESTABLISHMENT("Title of establishment"),
    @XmlEnumValue("Slogan")
    SLOGAN("Slogan"),
    @XmlEnumValue("Domestic")
    DOMESTIC("Domestic"),
    @XmlEnumValue("Foreign")
    FOREIGN("Foreign"),
    @XmlEnumValue("Hallmark")
    HALLMARK("Hallmark"), 
    @XmlEnumValue("6ter mark")
    SIXTERMARK("6ter mark"),
    @XmlEnumValue("Geographical indication")
    GEOGRAPHICALINDICATION("Geographical indication"),
    @XmlEnumValue("Appellation of origin")
    APPELLATIONOFORIGIN("Appellation of origin"),
    @XmlEnumValue("Well-known mark")
    WELLKNOWNMARK("Well-known mark");
    
    
    private final String value;

    IPRKindType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static IPRKindType fromValue(String v) {
        for (IPRKindType c: IPRKindType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
